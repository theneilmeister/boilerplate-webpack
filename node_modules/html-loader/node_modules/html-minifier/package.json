{
  "name": "html-minifier",
  "description": "HTML minifier with lint-like capabilities.",
  "version": "1.2.0",
  "keywords": [
    "html",
    "minifier",
    "lint"
  ],
  "homepage": "http://kangax.github.io/html-minifier/",
  "author": {
    "name": "Juriy \"kangax\" Zaytsev"
  },
  "maintainers": [
    {
      "name": "Juriy Zaytsev",
      "email": "kangax@gmail.com",
      "url": "http://perfectionkills.com"
    }
  ],
  "contributors": [
    {
      "name": "Gilmore Davidson",
      "url": "https://github.com/gilmoreorless"
    },
    {
      "name": "Hugo Wetterberg",
      "email": "hugo@wetterberg.nu"
    },
    {
      "name": "Zoltan Frombach",
      "email": "tssajo@gmail.com"
    }
  ],
  "license": "MIT",
  "bin": {
    "html-minifier": "./cli.js"
  },
  "main": "src/htmlminifier.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kangax/html-minifier.git"
  },
  "bugs": {
    "url": "https://github.com/kangax/html-minifier/issues"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "change-case": "2.3.x",
    "clean-css": "3.4.x",
    "cli": "0.11.x",
    "concat-stream": "1.5.x",
    "relateurl": "0.2.x",
    "uglify-js": "2.6.x"
  },
  "devDependencies": {
    "brotli": "1.1.x",
    "chalk": "1.1.x",
    "cli-table": "0.3.x",
    "grunt": "0.4.x",
    "grunt-contrib-concat": "0.5.x",
    "grunt-contrib-jshint": "1.0.x",
    "grunt-contrib-qunit": "1.0.x",
    "grunt-contrib-uglify": "0.11.x",
    "grunt-exec": "0.4.x",
    "grunt-jscs": "2.7.x",
    "load-grunt-tasks": "3.4.x",
    "lzma": "2.2.x",
    "minimize": "1.8.x",
    "progress": "1.1.x",
    "qunit": "0.9.x",
    "time-grunt": "1.3.x"
  },
  "files": [
    "dist",
    "src",
    "cli.js",
    "sample-cli-config-file.conf",
    "CHANGELOG.md",
    "LICENSE"
  ],
  "readme": "[![NPM version](https://img.shields.io/npm/v/html-minifier.svg)](https://www.npmjs.com/package/html-minifier)\n[![Build Status](https://img.shields.io/travis/kangax/html-minifier.svg)](https://travis-ci.org/kangax/html-minifier)\n[![Dependency Status](https://img.shields.io/david/kangax/html-minifier.svg)](https://david-dm.org/kangax/html-minifier)\n[![devDependency Status](https://img.shields.io/david/dev/kangax/html-minifier.svg)](https://david-dm.org/kangax/html-minifier#info=devDependencies)\n\n[HTMLMinifier](http://kangax.github.io/html-minifier/) is a highly **configurable**, **well-tested**, Javascript-based HTML minifier, with lint-like capabilities.\n\nSee [corresponding blog post](http://perfectionkills.com/experimenting-with-html-minifier/) for all the gory details of [how it works](http://perfectionkills.com/experimenting-with-html-minifier/#how_it_works), [description of each option](http://perfectionkills.com/experimenting-with-html-minifier/#options), [testing results](http://perfectionkills.com/experimenting-with-html-minifier/#field_testing) and [conclusions](http://perfectionkills.com/experimenting-with-html-minifier/#cost_and_benefits).\n\n[Test suite is available online](http://kangax.github.io/html-minifier/tests/).\n\nAlso see corresponding [Ruby wrapper](https://github.com/stereobooster/html_minifier), and for Node.js, [Grunt plugin](https://github.com/gruntjs/grunt-contrib-htmlmin), [Gulp module](https://github.com/jonschlinkert/gulp-htmlmin), and [Koa middleware wrapper](https://github.com/koajs/html-minifier).\n\n## Minification comparison\n\nHow does HTMLMinifier compare to other solutions â€” [HTML Minifier from Will Peavy](http://www.willpeavy.com/minifier/) (1st result in [google search for \"html minifier\"](https://www.google.com/#q=html+minifier)) as well as [htmlcompressor.com](http://htmlcompressor.com) and [minimize](https://github.com/Swaagie/minimize)?\n\n| Site                                                                        | Original size _(KB)_ | HTMLMinifier | minimize | Will Peavy | htmlcompressor.com |\n| --------------------------------------------------------------------------- |:--------------------:| ------------:| --------:| ----------:| ------------------:|\n| [HTMLMinifier page](https://github.com/kangax/html-minifier)                | 49                   | <b>37</b>    | 42       | 44         | 43                 |\n| [NBC](http://www.nbc.com)                                                   | 91                   | <b>74</b>    | 84       | 86         | 85                 |\n| [ES6 table](http://kangax.github.io/es5-compat-table/es6/)                  | 118                  | <b>80</b>    | 93       | 95         | 94                 |\n| [New York Times](http://www.nytimes.com/)                                   | 131                  | <b>101</b>   | 122      | 125        | 120                |\n| [Google](http://www.google.com/)                                            | 133                  | <b>128</b>   | 132      | 135        | 131                |\n| [MSN](http://msn.com)                                                       | 157                  | <b>130</b>   | 138      | 145        | 138                |\n| [Stackoverflow](http://stackoverflow.com)                                   | 200                  | <b>159</b>   | 165      | 174        | 166                |\n| [Amazon](http://amazon.com)                                                 | 246                  | <b>204</b>   | 234      | 230        | 219                |\n| [Wikipedia](http://en.wikipedia.org/wiki/President_of_the_United_States)    | 401                  | <b>367</b>   | 388      | 400        | n/a                |\n| [Eloquent Javascript](http://eloquentjavascript.net/print.html)             | 870                  | <b>826</b>   | 840      | 864        | n/a                |\n| [ES6 draft](https://people.mozilla.org/~jorendorff/es6-draft.html)          | 3678                 | <b>2991</b>  | 3079     | 3204       | n/a                |\n\n\n\n## Options Quick Reference\n\n| Option                         | Description     | Default |\n|--------------------------------|-----------------|---------|\n| `removeComments`               | [Strip HTML comments](http://perfectionkills.com/experimenting-with-html-minifier/#remove_comments) | `false` |\n| `removeCommentsFromCDATA`      | [Strip HTML comments from scripts and styles](http://perfectionkills.com/experimenting-with-html-minifier/#remove_comments_from_scripts_and_styles) | `false` |\n| `removeCDATASectionsFromCDATA` | [Remove CDATA sections from script and style elements](http://perfectionkills.com/experimenting-with-html-minifier/#remove_cdata_sections) | `false` |\n| `collapseWhitespace`           | [Collapse white space that contributes to text nodes in a document tree.](http://perfectionkills.com/experimenting-with-html-minifier/#collapse_whitespace) | `false` |\n| `conservativeCollapse`         | Always collapse to 1 space (never remove it entirely). Must be used in conjunction with `collapseWhitespace=true` | `false` |\n| `collapseInlineTagWhitespace`  | Don't leave any spaces between `display:inline;` elements when collapsing. Must be used in conjunction with `collapseWhitespace=true` | `false` |\n| `preserveLineBreaks`           | Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break. Must be used in conjunction with `collapseWhitespace=true` | `false` |\n| `collapseBooleanAttributes`    | [Omit attribute values from boolean attributes](http://perfectionkills.com/experimenting-with-html-minifier/#collapse_boolean_attributes) | `false` |\n| `removeTagWhitespace`          | Remove space between attributes whenever possible. | `false` |\n| `removeAttributeQuotes`        | [Remove quotes around attributes when possible.](http://perfectionkills.com/experimenting-with-html-minifier/#remove_attribute_quotes) | `false` |\n| `removeRedundantAttributes`    | [Remove attributes when value matches default.](http://perfectionkills.com/experimenting-with-html-minifier/#remove_redundant_attributes) | `false` |\n| `preventAttributesEscaping`    | Prevents the escaping of the values of attributes. | `false` |\n| `useShortDoctype`              | [Replaces the doctype with the short (HTML5) doctype](http://perfectionkills.com/experimenting-with-html-minifier/#use_short_doctype) | `false` |\n| `removeEmptyAttributes`        | [Remove all attributes with whitespace-only values](http://perfectionkills.com/experimenting-with-html-minifier/#remove_empty_or_blank_attributes) | `false` |\n| `removeScriptTypeAttributes`   | Remove `type=\"text/javascript\"` from `script` tags. Other `type` attribute values are left intact. | `false` |\n| `removeStyleLinkTypeAttributes`| Remove `type=\"text/css\"` from `style` and `link` tags. Other `type` attribute values are left intact. | `false` |\n| `removeOptionalTags`           | [Remove unrequired tags](http://perfectionkills.com/experimenting-with-html-minifier/#remove_optional_tags) | `false` |\n| `removeEmptyElements`          | [Remove all elements with empty contents](http://perfectionkills.com/experimenting-with-html-minifier/#remove_empty_elements) | `false` |\n| `lint`                         | [Toggle linting](http://perfectionkills.com/experimenting-with-html-minifier/#validate_input_through_html_lint) | `false` |\n| `keepClosingSlash`             | Keep the trailing slash on singleton elements                            | `false` |\n| `caseSensitive`                | Treat attributes in case sensitive manner (useful for custom HTML tags.) | `false` |\n| `minifyJS`                     | Minify Javascript in script elements and event attributes (uses [UglifyJS](https://github.com/mishoo/UglifyJS2)) | `false` (could be `true`, `false`, `Object` (options)) |\n| `minifyCSS`                    | Minify CSS in style elements and style attributes (uses [clean-css](https://github.com/GoalSmashers/clean-css)) | `false` (could be `true`, `false`, `Object` (options)) |\n| `minifyURLs`                   | Minify URLs in various attributes (uses [relateurl](https://github.com/stevenvachon/relateurl)) | `false` (could be `Object` (options)) |\n| `ignoreCustomComments`         | Array of regex'es that allow to ignore certain comments, when matched  | `[ ]` |\n| `ignoreCustomFragments`        | Array of regex'es that allow to ignore certain fragments, when matched (e.g. `<?php ... ?>`, `{{ ... }}`, etc.)  | `[ /<%[\\s\\S]*?%>/, /<\\?[\\s\\S]*?\\?>/ ]` |\n| `processScripts`               | Array of strings corresponding to types of script elements to process through minifier (e.g. `text/ng-template`, `text/x-handlebars-template`, etc.) | `[ ]` |\n| `maxLineLength`                | Specify a maximum line length. Compressed output will be split by newlines at valid HTML split-points. |\n| `customEventAttributes`        | Arrays of regex'es that allow to support custom event attributes for `minifyJS` (e.g. `ng-click`) | `[ /^on[a-z]{3,}$/ ]` |\n| `customAttrAssign`             | Arrays of regex'es that allow to support custom attribute assign expressions (e.g. `'<div flex?=\"{{mode != cover}}\"></div>'`) | `[ ]` |\n| `customAttrSurround`           | Arrays of regex'es that allow to support custom attribute surround expressions (e.g. `<input {{#if value}}checked=\"checked\"{{/if}}>`) | `[ ]` |\n| `customAttrCollapse`           | Regex that specifies custom attribute to strip newlines from (e.g. `/ng\\-class/`) | |\n| `quoteCharacter`               | Type of quote to use for attribute values (' or \") | |\n\n## Special cases\n\n### Ignoring chunks of markup.\n\nIf you have chunks of markup you would like preserved, you can wrap them `<!-- htmlmin:ignore -->`.\n\n### Preserving SVG tags\n\nSVG tags are automatically recognized, and when they are minified, both case-sensitivity and closing-slashes are preserved, regardless of the minification settings used for the rest of the file.\n\n### Working with invalid markup\n\nHTMLMinifier **can't work with invalid or partial chunks of markup**. This is because it parses markup into a tree structure, then modifies it (removing anything that was specified for removal, ignoring anything that was specified to be ingored, etc.), then it creates a markup out of that tree and returns it.\n\nInput markup (e.g. `<p id=\"\">foo`)\n\nâ†“\n\nInternal representation of markup in a form of tree (e.g. `{tag: \"p\", attr: \"id\", children: [\"foo\"] }`)\n\nâ†“\n\nTransformation of internal representation (e.g. removal of \"id\" attribute)\n\nâ†“\n\nOutput of resulting markup (e.g. `<p>foo</p>`)\n\nHTMLMinifier can't know that original markup was only half of the tree; it does its best to try to parse it as a full tree and it loses information about tree being malformed or partial in the beginning. As a result, it can't create a partial/malformed tree at the time of the output.\n\n## Installation Instructions\n\nFrom NPM for use as a command line app:\n```bash\nnpm install html-minifier -g\n```\n\nFrom NPM for programmatic use:\n```bash\nnpm install html-minifier\n```\n\nFrom Git:\n```bash\ngit clone git://github.com/kangax/html-minifier.git\ncd html-minifier\nnpm link .\n```\n\n## Usage\n\nFor command line usage please see `html-minifier --help`\n\n### Node.js\n\n```js\nvar minify = require('html-minifier').minify;\nvar result = minify('<p title=\"blah\" id=\"moo\">foo</p>', {\n  removeAttributeQuotes: true\n});\nresult; // '<p title=blah id=moo>foo</p>'\n```\n\n## Running benchmarks\n\nBenchmarks for minified HTML:\n```\nnode benchmark.js\n```\n",
  "readmeFilename": "README.md",
  "_id": "html-minifier@1.2.0",
  "dist": {
    "shasum": "40bfdb9b2cc42b5631ca8003f324bd32101dbbf9"
  },
  "_from": "html-minifier@^1.0.0",
  "_resolved": "https://registry.npmjs.org/html-minifier/-/html-minifier-1.2.0.tgz"
}
